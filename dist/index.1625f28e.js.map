{"mappings":"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","sources":["src/script.js"],"sourcesContent":["/** TODO\n * 1. check dynamic update of bpm --UPDATE NON NE VENGO A CAPO\n * 2. check if slider visualization now works --FOLDATO NON Ã¨ IMPORTANTE PER IL MOMENTO\n * 3. manage shapes --UPDATE riusciamo a bindare una width diversa per ogni layer\n*/\n\nVue.config.devtools = true\n\nlet instSelComponent = {\n\n    template:'\\\n           <div class=\"inst_sel\"\\\n           @click=\"instSelection\"\\\n           :style=\"cssVars\">\\\n           </div>\\\n    ',\n\n    props:{\n        id: {\n            type: Number,\n        },\n        selected_inst:{\n            type: Number,\n        }\n    },\n\n    methods: {\n        instSelection() {\n           inst_id=this.id\n           this.state = true\n           this.$emit('instSelectionEvent', inst_id)\n       },\n    },\n\n    computed: {\n        cssVars() {\n            activeCSScolors = ['rgb(255, 0, 0)','rgb(0, 0, 255)','rgb(0, 255, 0)']\n            passiveCSScolors = ['rgb(120, 0, 0)','rgb(0, 0, 120)','rgb(0, 120, 0)']\n            if(this.id==this.selected_inst){\n            return{\n                '--inst_sel_color': activeCSScolors[this.id-1],\n                '--inst_sel_border': '0px'\n            }}\n            return{\n                '--inst_sel_color': passiveCSScolors[this.id-1],\n                '--inst_sel_border': '2px'\n            }\n        }\n    }\n}\n\nlet controllerComponent = {\n    template:'\\\n       <div class=\"controller\">\\\n            <input class=\"text-input\" type=\"number\" v-model=\"newInput\" placeholder=\"Add a layer (press enter)\" @keyup.enter=\"addLayer\">\\\n            <input class=\"text-input\" type=\"number\" v-model=\"bpm_value\" placeholder=\"Select bpm (press enter)\" @keyup.enter=\"updateBPM\">\\\n            <button class=\"btn-1\" @click=\"playAll\">Play all</button>\\\n            <button class=\"btn-1\" @click=\"stopAll\">Stop</button>\\\n            <label>Instrument:</label>\\\n            <inst-component v-for=\"k in 3\"\\\n            :id=\"k\"\\\n            :selected_inst=selected_inst\\\n            @instSelectionEvent=\"instSelection\">\\\n            </inst-component>\\\n        </div>\\\n    ',\n\n    components: {\n        'inst-component' : instSelComponent,\n    },\n\n    props: {\n        id: {},\n        selected_inst:{\n            default: 1,\n        }\n    },\n\n    data() {\n        return {\n            newInput: '',\n            bpm_value: '',\n        }\n\n    },\n\n    computed: {\n        newInput_toNumber() {\n            return this.newInput ? parseInt(this.newInput) : null\n        },\n        bpm_value_toNumber() {\n            return this.bpm_value ? parseInt(this.bpm_value) : null\n        }\n    },\n\n    methods: {\n        addLayer() {\n            this.$emit('newLayerEvent', this.newInput_toNumber)\n            this.newInput = ''\n        },\n        updateBPM() {\n            this.$emit('bpmEvent', this.bpm_value_toNumber)\n            this.bpm_value = '' \n        },\n        playAll() {\n            this.$emit('playAllEvent')\n        },\n        stopAll() {\n            this.$emit('stopAllEvent')\n        },\n        instSelection(inst_id) {\n            this.selected_inst=inst_id\n            this.$emit('instSelectionEvent', inst_id)\n        },\n    },\n\n};\n\nlet keyComponent = {\n\n    template:'\\\n        <div>\\\n           <div class=\"key\"\\\n           :class=\"{active : state1 || state2 || state3}\"\\\n           @click=\"toggleActive\"\\\n           :style=\"cssVars\">\\\n           </div>\\\n        </div>\\\n    ',\n   \n    props: {\n        state1: {\n            default: false,\n            required: true,\n        },\n        state2: {\n           default: false,\n           required: true,\n       },\n       state3: {\n           default: false,\n           required: true,\n       },\n        isPlaying: {\n            type: Number,\n        },\n        id: {\n            type: Number,\n        },\n        myLayerId: {\n            type: Number,\n        },\n        inst_selection:{\n            type: Number,\n        },\n        last_color:{\n            type: Number,\n            default: 0,\n        },\n        very_last_color:{\n           type: Number,\n           default: 0,\n       }\n    },\n\n    methods: {\n        toggleActive() {\n            switch(this.inst_selection){\n               case 1: this.state1 = !this.state1\n                       if(this.state1){\n                       this.$emit('playSound1Event')\n                       }break;\n               case 2: this.state2 = !this.state2\n                       if(this.state2){\n                       this.$emit('playSound2Event')\n                       }break; \n               case 3: this.state3 = !this.state3\n                       if(this.state3){\n                       this.$emit('playSound3Event')\n               }break;\n            }\n        }\n    },\n    watch: {\n        'isPlaying': function(){\n            if(this.state1 && this.isPlaying == this.id){\n                this.$emit('playSound1Event')\n            }\n            if(this.state2 && this.isPlaying == this.id){\n               this.$emit('playSound2Event')\n           }\n           if(this.state3 && this.isPlaying == this.id){\n               this.$emit('playSound3Event')\n           }\n        }\n    },\n    computed: {\n       cssVars() {\n           CSScolors = ['rgb(255, 0, 0)','rgb(0, 0, 255)','rgb(0, 255, 0)'] /* Modifica qui i colori degli strumenti*/\n           if(this.state1 && this.state2 &&this.state3){\n               return {\n                   '--inst_color': CSScolors[3-this.very_last_color-this.last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.very_last_color]+',-14px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '7px',\n                   }\n               }\n           if(this.state1 && this.state2){\n               this.very_last_color = Math.abs(this.last_color-1)\n               return {\n                   '--inst_color': CSScolors[this.very_last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '3.5px',\n                   }\n               }\n           if(this.state2 && this.state3){\n               this.very_last_color = Math.abs(this.last_color-3)\n               return {\n                   '--inst_color': CSScolors[this.very_last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '3.5px',\n                   }\n               }\n           if(this.state1 && this.state3){\n               this.very_last_color = Math.abs(this.last_color-2)\n               return {\n                   '--inst_color': CSScolors[this.very_last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '3.5px',\n                   }\n               }\n           if(this.state1){\n               this.last_color = 0\n               return {\n                   '--inst_color': CSScolors[0],\n                   '--inst_shift': '0px',\n                   }\n               }\n           else if(this.state2){\n               this.last_color = 1\n               return {\n                   '--inst_color': CSScolors[1],\n                   '--inst_shift': '0px',\n                   }\n               }\n           else if(this.state3){\n               this.last_color = 2\n               return {\n                   '--inst_color': CSScolors[2],\n                   '--inst_shift': '0px',\n                   }\n               }\n       }\n    }\n}\n\nlet scaleSelectorComponent = {\n\n    template: '\\\n    <div id=\"scale-selector\">\\\n        <a href=\"#\">Select scale</a>\\\n        <ul>\\\n            <li><a href=\"#\">Scale 1</a></li>\\\n            <li><a href=\"#\">Scale 2</a></li>\\\n            <li><a href=\"#\">Scale 3</a></li>\\\n            <li><a href=\"#\">Scale 4</a></li>\\\n            <li><a href=\"#\">Scale 5</a></li>\\\n        </ul>\\\n    </div>\\\n'\n\n};\n\nlet layerComponent = {\n \n     template:'\\\n        <div class=\"layer\">\\\n            <div class=\"keyboard\">\\\n                <key-component v-for=\"k in num_beats\"\\\n                    class=\"keyback\" :style=\"cssVars\"\\\n                    :class=\"{playing : k === isPlaying + 1}\"\\\n                    :myLayerId=\"layerId\"\\\n                    :numKeys=\"num_beats\"\\\n                    :id=\"k-1\"\\\n                    :isPlaying=\"isPlaying\"\\\n                    :inst_selection=\"inst_id\"\\\n                    @playSound1Event=\"playInst1\"\\\n                    @playSound2Event=\"playInst2\"\\\n                    @playSound3Event=\"playInst3\">\\\n                </key-component>\\\n            </div>\\\n            <div class=\"layer-controller\">\\\n                <button id=\"remove-btn\" @click=\"$emit(\\'remove\\')\">Remove layer</button>\\\n                <button id=\"addKey-btn\" @click=\"$emit(\\'addKeyEvent\\')\"> + </button>\\\n                <button id=\"removeKey-btn\" @click=\"$emit(\\'removeKeyEvent\\')\"> - </button>\\\n                <scale-selector-component></scale-selector-component>\\\n            </div>\\\n        </div>\\\n     ',\n     \n     components: {\n         'key-component' : keyComponent,\n         'scale-selector-component' : scaleSelectorComponent,\n     },\n     \n  \n    props : ['layerId','num_beats','total_duration','system_playing','inst_id'],\n    \n    data() {\n        return {\n            isPlaying: 0,\n            my_clock: '',\n            margin: 5,\n            inst_selection: 1,\n        }\n    },\n    \n    computed: {\n        my_beat_duration() {\n            return this.total_duration/this.num_beats;\n        },\n        layer_width() { \n            //return document.getElementById('app').offsetWidth - 24\n            return 500\n        }, /* 698 - layer margin nÃ© app border = 674 */\n        cssVars() {\n            return {\n                '--margin': this.margin + 'px',\n                '--keyWidth': (this.layer_width - this.num_beats*2*this.margin)/this.num_beats + 'px'\n                }\n        }\n    },\n\n    methods: {\n        next() {\n            this.isPlaying = (this.isPlaying + 1) % (this.num_beats);\n        },\n        stop() {\n            clearInterval(this.my_clock)\n        },\n        play() {\n            this.stop();\n            this.my_clock = setInterval(this.next,this.my_beat_duration)\n        },\n        playInst1(){\n            synth1.triggerAttackRelease(\"A4\",\"16n\")\n        },\n        playInst2(){\n            synth2.triggerAttackRelease(\"D4\",\"16n\")\n        },\n        playInst3(){\n            synth3.triggerAttack(\"E4\");\n        },\n    }\n};\n\nlet sequencerComponent = {\n    \n    template: '\\\n        <div>\\\n            <div class=\"view-box\">\\\n                <p class=\"viewer\">BPM: {{bpm}}</p>\\\n                <p class=\"viewer\">Selected instrument: {{inst_name[inst_id-1]}}</p>\\\n            </div>\\\n            <controller-component\\\n                @newLayerEvent=\"addLayer\"\\\n                @bpmEvent=\"updateBPM\"\\\n                @playAllEvent=\"playAll\"\\\n                @stopAllEvent=\"stopAll\"\\\n                @instSelectionEvent=\"instSelection\"\\\n            ></controller-component>\\\n            <div id=\"layers-container\">\\\n                <layer-component v-for=\"(layer,index) in layers\"\\\n                    ref=\"layers_refs\"\\\n                    :layerId=\"layer.id\"\\\n                    :num_beats=\"layer.num_beats\"\\\n                    :total_duration=\"bar_duration\"\\\n                    :system_playing=\"playing\"\\\n                    :inst_id=\"inst_id\"\\\n                    @remove=\"layers.splice(index,1)\"\\\n                    @addKeyEvent=\"layer.num_beats++\"\\\n                    @removeKeyEvent=\"layer.num_beats--\">\\\n                </layer-component>\\\n            </div>\\\n        </div>\\\n    ',\n    \n    components: {\n        'layer-component' : layerComponent,\n        'controller-component' : controllerComponent,\n    },\n    \n    data(){\n        return {\n            bpm: 120,\n            playing: false,\n            nextId: 2,\n            layers: [\n                {\n                    id: 0,\n                    num_beats: 3\n                },\n                {\n                    id: 1,\n                    num_beats: 2\n                },\n            ],\n            inst_id: 1,\n            inst_name: ['nome_strumento1','nome_strumento2','nome_strumento3'] /*mettere nomi degli strumenti*/\n        }\n    },\n\n    computed: {\n        bar_duration() {\n            if(this.layers[0]){\n                return this.layers[0].num_beats*60000/this.bpm\n            }\n        }\n    },\n\n    methods: {\n        addLayer(num_beats_input) {\n            this.layers.push(\n                {   \n                    id: this.nextId,\n                    num_beats: num_beats_input\n                }\n            )\n            this.nextId += 1\n        },\n        /** errors when bpm is updated while playing */\n        updateBPM(bpm_input) {\n            /** assign new bpm value */\n            this.bpm = bpm_input\n        },\n        /** l'uso di $ref non Ã¨ dinamico, quindi se aggiungo layer quando sto suonando l'ultimo layer non parte */\n        playAll() {\n            /** first reset all layers */\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].isPlaying = 0\n            }\n            /** then restart */\n            this.playing = true\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].play()\n            }\n        },\n        stopAll() {\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].stop()\n            }\n            this.playing = false\n        },\n        instSelection(inst_id) {\n            this.inst_id=inst_id\n        },\n    }\n}\n\nvar app = new Vue({\n    el:'#app',\n    components: {\n        'sequencer-component': sequencerComponent\n    }\n})\n\nvar synth1 = new Tone.PolySynth().toDestination();\nvar synth2 = new Tone.DuoSynth({\n    vibratoAmount  : 0.5 ,\n    vibratoRate  : 5 ,\n    harmonicity  : 1.5 ,\n    voice0  : {\n    volume  : -10 ,\n    portamento  : 0 ,\n    oscillator  : {\n    type  : \"sine\"\n    }  ,\n    filterEnvelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }  ,\n    envelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }\n    }  ,\n    voice1  : {\n    volume  : -10 ,\n    portamento  : 0 ,\n    oscillator  : {\n    type  : \"sine\"\n    }  ,\n    filterEnvelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }  ,\n    envelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }\n    }\n    }).toDestination();\nvar synth3 = new Tone.PluckSynth({\n    attackNoise  : 1 ,\n    dampening  : 8000 ,\n    resonance  : 0.9\n    }).toDestination();"],"names":[],"version":3,"file":"index.1625f28e.js.map","sourceRoot":"/__parcel_source_root/"}