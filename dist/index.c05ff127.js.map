{"mappings":"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AA1D,CAAA;IACE,KAAA,CAAM,SAAS,GAAG,QAAQ,CAAC,YAAY;IACvC,MAAA,EAAO,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,IAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA,GAAT,SAAS,CAAE,IAAI,MAAA,CAAA,QAAA,CAAA,AAAA,EAAA,AAAA,SAAA,AAAA,EAAA;AACxB,CAAA;A,K,C,M,G,C;A,K,C,S,G,C;ACzDA,E,AAAA,umB,AAAA,E,CAmBO,KAAA,CAAM,MAAM,GAAG,GAAA,gBAAW,CAAe;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,M,G,C;A,K,C,I,G,C;A,K,C,O,G,C;ACnBhD,E,AAAA,umB,AAAA,E,CA2CA,E,AAAA,+C,AAAA,E,CAKa,KAAA,CAAA,kBAAkB,GAAG,CAAA;AAE3B,KAAA,CAAM,mBAAmB,GAAG,CAA5B;KACJA,MAAO,GAAG,CAAW;KACrBC,MAAa,GAAG,CAAkB;KAClCC,MAAa,GAAG,CAAgB;KAChCC,MAAmB,GAAG,CAAuB;KAC7CC,MAAY,GAAG,CAAgB;KAC/BC,MAAkB,GAAG,CAAuB;KAC5CC,MAAQ,GAAG,CAAW;KACtBC,MAAc,GAAG,CAAkB;KACnCC,MAAY,GAAG,CAAW;KAC1BC,MAAkB,GAAG,CAAkB;KACvCC,MAAa,GAAG,CAAS;KACzBC,MAAmB,GAAG,CAAgB;KACtCC,MAAiB,GAAG,CAAU;KAC9BC,MAAuB,GAAG,CAAiB;KAC3CC,MAAa,GAAG,CAAU;KAC1BC,MAAmB,GAAG,CAAiB;KACvCC,MAAe,GAAG,CAAW;KAC7BC,MAAqB,GAAG,CAAkB;KAC1CC,MAAgB,GAAG,CAAS;KAC5BC,MAAsB,GAAG,CAAgB;KACzCC,MAAW,GAAG,CAAU;K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AAI,EAAE,IAAI;QAC3C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,QAAqC;QAE9D,MAAA,CAAO,QAAuB;IAC/B,CAAA;IAED,YAAY,GAAZ,CAAA;QACE,MAAA,CAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;IACxC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+C,S;;8C,Q;;kD,Y;;mD,a;;sD,gB;;mD,a;;0C,I;;uD,iB;;4C,M;;oD,c;;2C,K;;4C,M;;kD,Y;;kD,Y;;mE,6B;;4D,sB;;8C,Q;;yD,mB;;qD,e;;4C,M;;8C,Q;;+C,S;;gD,U;;iD,W;;wD,kB;;+C,S;;wD,kB;;2C,K;;6C,O;;+C,S;;wD,kB;;gD,U;;6C,O;;0C,I;;0D,oB;;qD,e;;4C,M;;+C,S;;mD,a;;8C,Q;;2C,K;;mD,a;;sD,gB;;kD,Y;;8C,Q;;yC,G;;6C,O;;iD,W;;uD,iB;;6C,O;;kD,Y;;uD,iB;;+C,S;;sD,gB;;sD,gB;;2D,qB;;+D,yB;;uD,iB;;;AEhFH,E,AAAA,umB,AAAA,E,CAiBA,E,AAAA,uG,AAAA,E,CAIa,KAAA,CAAA,SAAS,GAAG,CAAZ;I,E,A,0E,A,E,CAIX,WAAW,EAAE,KAAK;I,E,A,yE,A,E,CAIlB,UAAU,EAAE,KAAK;I,E,A,qC,A,E,CAKjB,WAAW,EAAE,CAAmB;A,C;AClClC,E,AAAA,umB,AAAA,E,CAmBA,E,AAAA,2D,AAAA,E,CAGa,KAAA,CAAA,MAAM,GAAG,QAAA,CAAU,SAAkB,EAAE,OAAe,EAAtD,CAAA;IACX,EAAA,GAAK,SAAS,EACZ,KAAA,CAAM,cAAc,CAAC,OAAO;AAEhC,CAAA;AAEA,E,AAAA,uD,AAAA,E,CAGa,KAAA,CAAA,cAAc,GAAG,QAAA,CAAU,OAAe,EAA1C,CAAA;IACX,MAAA,CAAO,GAAA,CAAI,KAAK,CACd,CAAqB,uBACnB,SAAS,CAAC,WAAW,GACrB,CAA4B,8BAC5B,OAAO;AAEb,CAAA;ACtCA,E,AAAA,umB,AAAA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","sources":["../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/runtime-browser-hmr/lib/runtime-b7db6a8d8a0401d0.js","src/script.js","../../node_modules/firebase/app/dist/index.esm.js","../../node_modules/firebase/app/index.ts","../../node_modules/@firebase/app/dist/esm/index.esm2017.js","../../node_modules/@firebase/app/src/platformLoggerService.ts","../../node_modules/@firebase/app/src/logger.ts","../../node_modules/@firebase/app/src/constants.ts","../../node_modules/@firebase/app/src/internal.ts","../../node_modules/@firebase/app/src/errors.ts","../../node_modules/@firebase/app/src/firebaseApp.ts","../../node_modules/@firebase/app/src/api.ts","../../node_modules/@firebase/app/src/registerCoreComponents.ts","../../node_modules/@firebase/app/src/index.ts","../../node_modules/@firebase/component/dist/esm/index.esm2017.js","../../node_modules/@firebase/component/src/component.ts","../../node_modules/@firebase/component/src/constants.ts","../../node_modules/@firebase/component/src/provider.ts","../../node_modules/@firebase/component/src/component_container.ts","../../node_modules/@firebase/util/dist/index.esm2017.js","../../node_modules/@firebase/util/src/constants.ts","../../node_modules/@firebase/util/src/assert.ts","../../node_modules/@firebase/util/src/crypt.ts","../../node_modules/@firebase/util/src/deepCopy.ts","../../node_modules/@firebase/util/src/deferred.ts","../../node_modules/@firebase/util/src/emulator.ts","../../node_modules/@firebase/util/src/environment.ts","../../node_modules/@firebase/util/src/errors.ts","../../node_modules/@firebase/util/src/json.ts","../../node_modules/@firebase/util/src/jwt.ts","../../node_modules/@firebase/util/src/obj.ts","../../node_modules/@firebase/util/src/query.ts","../../node_modules/@firebase/util/src/sha1.ts","../../node_modules/@firebase/util/src/subscribe.ts","../../node_modules/@firebase/util/src/validation.ts","../../node_modules/@firebase/util/src/utf8.ts","../../node_modules/@firebase/util/src/exponential_backoff.ts","../../node_modules/@firebase/util/src/formatters.ts","../../node_modules/@firebase/util/src/compat.ts","../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/transformer-js/src/esmodule-helpers.js","../../node_modules/@firebase/logger/dist/esm/index.esm2017.js","../../node_modules/@firebase/logger/src/logger.ts","../../node_modules/firebase/storage/dist/index.esm.js","../../node_modules/@firebase/storage/dist/index.esm2017.js","../../node_modules/@firebase/storage/src/implementation/constants.ts","../../node_modules/@firebase/storage/src/implementation/error.ts","../../node_modules/@firebase/storage/src/implementation/location.ts","../../node_modules/@firebase/storage/src/implementation/failrequest.ts","../../node_modules/@firebase/storage/src/implementation/backoff.ts","../../node_modules/@firebase/storage/src/implementation/type.ts","../../node_modules/@firebase/storage/src/implementation/url.ts","../../node_modules/@firebase/storage/src/implementation/connection.ts","../../node_modules/@firebase/storage/src/implementation/request.ts","../../node_modules/@firebase/storage/src/implementation/fs.ts","../../node_modules/@firebase/storage/src/platform/browser/base64.ts","../../node_modules/@firebase/storage/src/implementation/string.ts","../../node_modules/@firebase/storage/src/implementation/blob.ts","../../node_modules/@firebase/storage/src/implementation/json.ts","../../node_modules/@firebase/storage/src/implementation/path.ts","../../node_modules/@firebase/storage/src/implementation/metadata.ts","../../node_modules/@firebase/storage/src/implementation/list.ts","../../node_modules/@firebase/storage/src/implementation/requestinfo.ts","../../node_modules/@firebase/storage/src/implementation/requests.ts","../../node_modules/@firebase/storage/src/implementation/taskenums.ts","../../node_modules/@firebase/storage/src/implementation/observer.ts","../../node_modules/@firebase/storage/src/implementation/async.ts","../../node_modules/@firebase/storage/src/platform/browser/connection.ts","../../node_modules/@firebase/storage/src/task.ts","../../node_modules/@firebase/storage/src/reference.ts","../../node_modules/@firebase/storage/src/service.ts","../../node_modules/@firebase/storage/src/constants.ts","../../node_modules/@firebase/storage/src/api.ts","../../node_modules/@firebase/storage/src/api.browser.ts","../../node_modules/@firebase/storage/src/index.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"91f24895c05ff127\";\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        var oldDeps = modules[asset.id][1];\n\n        for (var dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            var id = oldDeps[dep];\n            var parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    var deps = modules[id][1];\n    var orphans = [];\n\n    for (var dep in deps) {\n      var parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(function (id) {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  var parents = getParents(module.bundle.root, id);\n  var accepted = false;\n\n  while (parents.length > 0) {\n    var v = parents.shift();\n    var a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      var p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push.apply(parents, _toConsumableArray(p));\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","/** TODO\n * 1. check dynamic update of bpm --UPDATE NON NE VENGO A CAPO\n * 2. check if slider visualization now works --FOLDATO NON è IMPORTANTE PER IL MOMENTO\n * 4. provare a gestire key e scale con v-model -- UPDATE CREATA VARIABILE\n*/\n\nVue.config.devtools = true\n\nlet instSelComponent = {\n\n    template:'\\\n            <div class=\"inst-container\">\\\n                <div class=\"inst_sel\"\\\n                    @click=\"instSelection\"\\\n                    :style=\"cssVars\">\\\n                </div>\\\n                <div>\\\n                <input class=\"slider\" type=\"range\" min=\"0\" max=\"100\" v-model=\"volume\" :style=\"cssVars\">\\\n                <input class=\"slider\" type=\"range\" min=\"0\" max=\"100\" v-model=\"note_duration\" :style=\"cssVars\">\\\n                </div>\\\n           </div>\\\n    ',\n\n    props:{\n        id: { type: Number, },\n        selected_inst:{ type: Number, },\n        volume:{default: 75},\n        note_duration:{default: 0}\n    },\n\n    methods: {\n        instSelection() {\n           this.state = true\n           this.$emit('instSelectionEvent', this.id)\n       },\n    },\n\n    computed: {\n        cssVars() {\n            activeCSScolors = ['rgb(255, 0, 0)','rgb(0, 0, 255)','rgb(0, 255, 0)']\n            passiveCSScolors = ['rgb(120, 0, 0)','rgb(0, 0, 120)','rgb(0, 120, 0)']\n            if(this.id==this.selected_inst){\n            return{\n                '--inst_sel_color': activeCSScolors[this.id-1],\n                '--inst_sel_border': '0px',\n                '--slidercolor': passiveCSScolors[this.id-1],\n            }}\n            return{\n                '--inst_sel_color': passiveCSScolors[this.id-1],\n                '--inst_sel_border': '2px',\n                '--slidercolor': passiveCSScolors[this.id-1],\n            }\n        },\n    }\n}\n\nlet controllerComponent = {\n    template:'\\\n       <div class=\"controller\">\\\n            <div class=\"controller-container\">\\\n                <h1 class=\"controller-labels\">Setup</h1>\\\n                <input class=\"text-input\" type=\"number\" v-model=\"newInput\" placeholder=\"Add a layer (press enter)\" @keyup.enter=\"addLayer\">\\\n                <input class=\"text-input\" type=\"number\" v-model=\"bpm_value\" placeholder=\"Select bpm (press enter)\" @keyup.enter=\"updateBPM\">\\\n                <label>Play-on-touch:</label>\\\n                <input type=\"checkbox\" class=\"checkbox\" v-model=\"pot\" @click=\"potChange\">\\\n            </div>\\\n            <div class=\"controller-container\">\\\n                <h1 class=\"controller-labels\">Loop</h1>\\\n                <button class=\"btn-1\" @click=\"$emit(\\'playAllEvent\\')\">Play</button>\\\n                <button class=\"btn-1\" @click=\"$emit(\\'stopAllEvent\\')\">Stop</button>\\\n            </div>\\\n            <div class=\"controller-container\">\\\n                <h1 class=\"controller-labels\">Synths</h1>\\\n                <inst-component v-for=\"k in num_inst\"\\\n                    :id=\"k\"\\\n                    :selected_inst=selected_inst\\\n                    @instSelectionEvent=\"instSelection\">\\\n                </inst-component>\\\n            </div>\\\n            <span class=\"stretch\"></span>\\\n        </div>\\\n    ',\n\n    components: {\n        'inst-component' : instSelComponent,\n    },\n\n    props: {\n        id: {},\n        selected_inst:{\n            default: 1,\n        }\n    },\n\n    data() {\n        return {\n            newInput: '',\n            bpm_value: '',\n            pot: true,\n            num_inst: 3,\n        }\n    },\n\n    computed: {\n        newInput_toNumber() {\n            return this.newInput ? parseInt(this.newInput) : null\n        },\n        bpm_value_toNumber() {\n            return this.bpm_value ? parseInt(this.bpm_value) : null\n        }\n    },\n\n    methods: {\n        addLayer() {\n            this.$emit('newLayerEvent', this.newInput_toNumber)\n            this.newInput = ''\n        },\n        updateBPM() {\n            this.$emit('bpmEvent', this.bpm_value_toNumber)\n            this.bpm_value = '' \n        },\n        instSelection(inst_id) {\n           this.$emit('instSelectionEvent', inst_id)\n           this.selected_inst=inst_id\n       },\n       potChange(){\n        this.$emit('potEvent', !this.pot)\n       }\n    }\n};\n\nlet menuElementcomponent = {\n    template:'<div @click=\"$emit(\\'selectionEvent\\', element)\"> {{ element }} </div>',\n    props: ['element']\n}\n\nlet scaleSelectorComponent = {\n\n    template: '\\\n        <div id=\"key-selector\" class=\"selector\"> {{ selectedScale }}\\\n            <menu-element-component v-for=\"mode in scales\"\\\n                class=\"menu-element\"\\\n                :element=\"mode\"\\\n                @selectionEvent=\"selectScale\">\\\n            </menu-element-component>\\\n        </div>\\\n    ',\n\n    components: {\n        'menu-element-component' : menuElementcomponent,\n    },\n\n    data() {\n        return {\n            selectedScale: 'Major',\n            scales: ['Major','Minor','Melodic Minor','Harmonic Minor','Diminished','Augmented','Hexatonic'],\n        }\n    },\n\n    methods: {\n        selectScale(scale) {\n            this.selectedScale = scale;\n            this.$emit('scaleSelectedEvent', scale)\n        }\n    }\n};\n\nlet keySelectorComponent = {\n\n    template: '\\\n        <div id=\"key-selector\" class=\"selector\">Selected key: {{ selectedKey }}\\\n            <menu-element-component v-for=\"note in keys\"\\\n                class=\"menu-element\"\\\n                :element=\"note\"\\\n                @selectionEvent=\"selectKey\">\\\n            </menu-element-component>\\\n        </div>\\\n    ',\n\n    components: {\n        'menu-element-component' : menuElementcomponent,\n    },\n\n    data() {\n        return {\n            selectedKey: 'C',\n            keys: ['C','Db','D','Eb','E','F','Gb','G','Ab','A','Bb','B'],\n        }\n    },\n\n    methods: {\n        selectKey(note) {\n            this.selectedKey = note;\n            this.$emit('keySelectedEvent', note)\n        }\n    }\n};\n\nlet keyComponent = {\n    template:'\\\n        <div @click=\"toggleActive\">\\\n            <div class=\"key\"\\\n                :class=\"{active : state1 || state2 || state3}\"\\\n                :style=\"cssVars\">\\\n            </div>\\\n        </div>\\\n    ',\n   \n    props: {\n        beatId: { type: Number },\n        keyId: {type: Number },\n        state1: { default: false },\n        state2: { default: false },\n        state3: { default: false },\n        pot: {type: Boolean},\n        \n        beatMuted: { type: Boolean, default: false },\n        layerMuted: { type: Boolean, default: false },\n\n        isPlaying: { type: Number },\n        inst_selected:{ type: Number },\n        last_color:{ type: Number, default: 0 },\n        very_last_color:{ type: Number, default: 0 }\n    },\n    \n    watch: {\n        'isPlaying': function() {\n            if(!this.layerMuted && !this.beatMuted && this.isPlaying == this.beatId) { \n                this.playKey();\n            } \n        }\n    },\n\n    computed: {\n       cssVars() {\n           CSScolors = ['rgb(255, 0, 0)','rgb(0, 0, 255)','rgb(0, 255, 0)'] /* Modifica qui i colori degli strumenti*/\n           if(this.state1 && this.state2 &&this.state3){\n               return {\n                   '--inst_color': CSScolors[3-this.very_last_color-this.last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.very_last_color]+',-14px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '7px',\n                   }\n               }\n           if(this.state1 && this.state2){\n               this.very_last_color = Math.abs(this.last_color-1)\n               return {\n                   '--inst_color': CSScolors[this.very_last_color],\n                   '--shadow': '-7px 0 '+ CSScolors[this.last_color],\n                   '--inst_shift': '3.5px',\n                   }\n               }\n           if(this.state2 && this.state3){\n               this.very_last_color = Math.abs(this.last_color-3)\n               return {\n                   '--inst_color': CSScolors[this.very_last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '3.5px',\n                   }\n               }\n           if(this.state1 && this.state3){\n               this.very_last_color = Math.abs(this.last_color-2)\n               return {\n                   '--inst_color': CSScolors[this.very_last_color],\n                   '--shadow': '-7px 0 '+CSScolors[this.last_color],\n                   '--inst_shift': '3.5px',\n                   }\n               }\n           if(this.state1){\n               this.last_color = 0\n               return {\n                   '--inst_color': CSScolors[0],\n                   '--inst_shift': '0px',\n                   }\n               }\n           else if(this.state2){\n               this.last_color = 1\n               return {\n                   '--inst_color': CSScolors[1],\n                   '--inst_shift': '0px',\n                   }\n               }\n           else if(this.state3){\n               this.last_color = 2\n               return {\n                   '--inst_color': CSScolors[2],\n                   '--inst_shift': '0px',\n                   }\n               }\n       }\n    },\n\n    methods: {\n        toggleActive() {\n            switch(this.inst_selected){\n                case 1:\n                    this.state1 = !this.state1\n                    if(!this.layerMuted && !this.beatMuted && this.state1 && this.pot){\n                        this.$emit('playSound1Event',this.keyId)\n                    } break;\n                case 2: \n                    this.state2 = !this.state2\n                    if(!this.layerMuted && !this.beatMuted && this.state2 && this.pot){\n                        this.$emit('playSound2Event',this.keyId)\n                    } break; \n                case 3: \n                    this.state3 = !this.state3\n                    if(!this.layerMuted && !this.beatMuted && this.state3 && this.pot){\n                        this.$emit('playSound3Event',this.keyId)\n                    } break;\n            } \n        },\n\n        playKey() {\n            if(this.state1){\n                this.$emit('playSound1Event',this.keyId)\n            }\n            if(this.state2){\n                this.$emit('playSound2Event',this.keyId)\n            }\n            if(this.state3){\n                this.$emit('playSound3Event',this.keyId)\n            }\n        },\n\n        clearKey() {\n            if(this.state1){ this.state1 = !this.state1 }\n            if(this.state2){ this.state2 = !this.state2 }\n            if(this.state3){ this.state3 = !this.state3 }\n        },\n        setKey(state1,state2,state3){\n            this.state1=state1\n            this.state2=state2\n            this.state3=state3\n        }\n    },\n\n}\n\nlet columnComponent = {\n    template: '\\\n        <div>\\\n            <key-component v-for=\"k in tonesInScale\"\\\n                class=\"keyback\"\\\n                ref=\"keys_refs\"\\\n                :isPlaying=\"isPlaying\"\\\n                :inst_selected=\"inst_selected\"\\\n                :beatId=\"beatId\"\\\n                :keyId=tonesInScale-k\\\n                :beatMuted=\"beatMuted\"\\\n                :layerMuted=\"layerMuted\"\\\n                :pot=\"pot\"\\\n                @playSound1Event=\"playInst1\"\\\n                @playSound2Event=\"playInst2\"\\\n                @playSound3Event=\"playInst3\"\\\n            ></key-component>\\\n            <div id=\"beat-controller\">\\\n                <button class=\"beat-btn monitor-btn\" @click=\"for(var idx=0; idx<tonesInScale; idx++) { $refs.keys_refs[idx].playKey() }\">P</button>\\\n                <button class=\"beat-btn mute-btn\" :class=\"{ muteActive : beatMuted }\" @click=\"beatMuted=!beatMuted\">M</button>\\\n                <button class=\"beat-btn clear-btn\" @click=\"clearAllKeys\">C</button>\\\n            </div>\\\n        </div>\\\n    ',\n\n    components : {\n        'key-component' : keyComponent,\n    },\n\n    props : ['beatId','layerMuted','tonesInScale', \"inst_selected\", 'isPlaying','scale_keyboard','pot'],\n\n    data() {\n        return {\n            beatMuted: false,\n        }\n    },\n\n    methods : {\n        playInst1(keyId){\n            synth1.triggerAttackRelease(this.scale_keyboard[keyId],\"16n\")\n        },\n        playInst2(keyId){\n            synth2.triggerAttackRelease(this.scale_keyboard[keyId],\"16n\")\n        },\n        playInst3(keyId){\n            drum[keyId].start();\n        },\n        getKeyProps() {\n            var key_state1 = []\n            var key_state2 = []\n            var key_state3 = []\n            for(j=0;j<this.tonesInScale;j++){\n                key_state1[j]=this.$refs.keys_refs[j].state1;\n                key_state2[j]=this.$refs.keys_refs[j].state2;\n                key_state3[j]=this.$refs.keys_refs[j].state3;\n            }\n            return {key_state1,key_state2,key_state3}\n        },\n        setColumn(newvar){\n            key_state1=newvar.key_state1\n            key_state2=newvar.key_state2\n            key_state3=newvar.key_state3\n            for(j=0;j<this.tonesInScale;j++){\n                this.$refs.keys_refs[j].setKey(key_state1[j],key_state2[j],key_state3[j])\n            }\n        },\n        clearAllKeys(){\n            for(var idx=0; idx<this.tonesInScale; idx++) { \n                this.$refs.keys_refs[idx].clearKey() \n            }\n        }\n    }\n}\n\nlet layerComponent = {\n    template:'\\\n        <div class=\"layer\">\\\n            <div class=\"layer-labels\">\\\n                <div v-if=\"inst_id==3\">\\\n                    <p class=\"key-label\" v-for=\"k in tonesInScale\">{{drum_keyboard[tonesInScale-k]}}</p>\\\n                </div>\\\n                <div v-else>\\\n                    <p class=\"key-label\" v-for=\"k in tonesInScale\">{{scale_keyboard[tonesInScale-k].slice(0, -1)}}</p>\\\n                </div>\\\n            </div>\\\n            <div v-for=\"j in n_bars\">\\\n                <div class=\"keyboard\">\\\n                    <column-component v-for=\"k in num_beats\"\\\n                        class=\"column\" :style=\"cssVars\"\\\n                        ref = beats_refs\\\n                        :class=\"{playing : k*j-(k-num_beats)*(j-1) === isPlaying + 1}\"\\\n                        :beatId=\"k*j-1-(k-num_beats)*(j-1)\"\\\n                        :layerMuted=\"layerMuted\"\\\n                        :isPlaying=\"isPlaying\"\\\n                        :inst_selected=\"inst_id\"\\\n                        :scale_keyboard=\"scale_keyboard\"\\\n                        :tonesInScale=\"tonesInScale\"\\\n                        :pot=\"pot\"\\\n                    ></column-component>\\\n                </div>\\\n            </div>\\\n            <div class=\"layer-controller\">\\\n                <div id=\"buttons\">\\\n                    <button id=\"remove-btn\" @click=\"$emit(\\'remove\\')\">Remove layer</button>\\\n                    <button id=\"addKey-btn\" @click=\"$emit(\\'addKeyEvent\\')\"> + </button>\\\n                    <button id=\"removeKey-btn\" @click=\"$emit(\\'removeKeyEvent\\')\"> - </button>\\\n                </div>\\\n                <key-selector-component\\\n                    @keySelectedEvent=\"printKey\">\\\n                </key-selector-component>\\\n                <scale-selector-component\\\n                    @scaleSelectedEvent=\"printScale\">\\\n                </scale-selector-component>\\\n                <div id=\"octave-selector\">\\\n                    <div class=\"octave-viewer\">Octave: {{octave}} </div>\\\n                    <button class=\"layer-btn\" id=\"addKey-btn\" @click=\"moreOctave\"> + </button>\\\n                    <button class=\"layer-btn\" @click=\"lessOctave\"> - </button>\\\n                </div>\\\n                <div class=\"layer-sound-controller\">\\\n                    <button class=\"layer-btn mute-btn\" :class=\"{ muteActive : layerMuted }\" @click=\"layerMuted=!layerMuted\">M</button>\\\n                    <button class=\"layer-btn clear-btn\" @click=\"for(var idx=0; idx<$refs.beats_refs.length; idx++) { $refs.beats_refs[idx].clearAllKeys() }\">C</button>\\\n                </div>\\\n            </div>\\\n        </div>\\\n    ',\n     \n    components: {\n        'column-component' : columnComponent,\n        'scale-selector-component' : scaleSelectorComponent,\n        'key-selector-component' : keySelectorComponent,\n    },\n    \n    props : {\n        num_beats: Number,\n        total_duration: Number,\n        inst_id: Number,\n        n_bars: Number,\n        pot: Boolean,\n        \n        key: { default: 'C' },\n        scale: { default:'Major' },\n        scale_keyboard : { default: [\"C4\",\"D4\",\"E4\",\"F4\",\"G4\",\"A4\",\"B4\",\"C5\"] },\n        drum_keyboard : { default: [\"kick\", \"snare\", \"tom 1\",\"tom 2\",\"closed hh\", \"open hh\", \"ride\",\"cowbell\"] }\n    },\n    \n    data() {\n        return {\n            isPlaying: 0,\n            my_clock: '',\n            tonesInScale: 8,\n            keyboard: '',\n            octave: 4,\n            layerMuted: false,\n        }\n    },\n\n    watch: {\n        'isPlaying': function(val) {\n            if(val==0){\n                this.$emit('restartEvent');\n            }\n        }\n    },\n    \n    computed: {\n        beatPlaying() {\n            return this.isPlaying;\n        },\n        my_beat_duration() {\n            return Number(this.total_duration/(this.num_beats));\n        },\n        cssVars() {\n            var layerWidth = 500;\n            var margin = 5;\n            var borderKey = 3;\n            var keyHeight = 18;\n            var barWidth = 500;\n            return {\n                '--columnWidth': (layerWidth - this.num_beats*2*margin)/(this.num_beats*this.n_bars) + 'px', //157\n                '--columnHeight' : this.tonesInScale*(keyHeight + 2*borderKey) + 'px',\n                '--barWidth': (barWidth)/this.n_bars + 'px'\n            }\n        },\n    },\n\n    methods: {\n        next() {\n            this.isPlaying = (this.isPlaying + 1) % (this.num_beats*this.n_bars);\n        },\n        stop() {\n            clearInterval(this.my_clock)\n        },\n        play() {\n            this.stop();\n            this.my_clock = setInterval(this.next,this.my_beat_duration)\n        },\n        printScale(num_scale){\n            console.log(\"Selected scale \" + num_scale);\n            this.scale = num_scale;\n            this.keyboardCreator()\n        },\n        printKey(num_key){\n            console.log(\"Selected key \" + num_key)\n            this.key = num_key;\n            this.keyboardCreator()\n        },\n        keyboardCreator(){\n            this.keyboard = [\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"]\n            this.keyboard = this.keyboard.map(ele => ele + this.octave)\n            while(this.key+this.octave!=this.keyboard[0]){\n                first_element = this.keyboard.shift()\n                first_element = first_element.slice(0, -1) + (this.octave+1)\n                this.keyboard = this.keyboard.concat(first_element)\n            }\n            switch(this.scale){\n                case 'Major': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 2741 & (1 << index);\n                });/*101010110101 and reversed = 2741*/\n                this.scale_keyboard.push(this.scale_keyboard[0].slice(0, -1) + (this.octave+1))\n                break;\n                case 'Minor': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 1453 & (1 << index);\n                });/*101101011010 and reversed = 1453*/\n                this.scale_keyboard.push(this.scale_keyboard[0].slice(0, -1) + (this.octave+1))\n                break;\n                case 'Melodic Minor': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 2733 & (1 << index);\n                });/*101010101101 and reversed = 2733*/\n                this.scale_keyboard.push(this.scale_keyboard[0].slice(0, -1) + (this.octave+1))\n                break;\n                case 'Harmonic Minor': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 2477 & (1 << index);\n                });/*100110101101 and reversed = 2477*/\n                this.scale_keyboard.push(this.scale_keyboard[0].slice(0, -1) + (this.octave+1))\n                break;\n                case 'Diminished': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 1755 & (1 << index);\n                });/*110110110110 and reversed = 2925*/\n                \n                break;\n                case 'Augmented': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 2457 & (1 << index);\n                });/*10011011001 and reversed = 2457*/\n                this.scale_keyboard.push(this.scale_keyboard[0].slice(0, -1) + (this.octave+1))\n                this.scale_keyboard.push(this.scale_keyboard[1].slice(0, -1) + (this.octave+1))\n                break;\n                case 'Hexatonic': this.scale_keyboard = this.keyboard.filter((value, index) => {\n                    return 1365 & (1 << index);\n                });/*101010101010 and reversed = 1365*/\n                this.scale_keyboard.push(this.scale_keyboard[0].slice(0, -1) + (this.octave+1))\n                this.scale_keyboard.push(this.scale_keyboard[1].slice(0, -1) + (this.octave+1))\n                break;\n            }\n        },\n        moreOctave(){\n            this.octave++\n            this.keyboardCreator()\n        },\n        lessOctave(){\n            this.octave--\n            this.keyboardCreator()\n        },\n        addLBar(){\n            Vue.nextTick(() =>{\n                //column_states = Array(this.num_beats)\n                    for(i=0;i<this.num_beats;i++) {\n                    newvar = this.$refs.beats_refs[i].getKeyProps()\n                    this.$refs.beats_refs[i+(this.n_bars-1)*this.num_beats].setColumn(newvar)\n                    //column_states[i]=(newvar)\n                    }\n            })\n        }\n    },\n};\n\nlet sequencerComponent = {\n    \n    template: '\\\n        <div>\\\n            <div class=\"view-box\">\\\n                <p class=\"viewer\">BPM: {{bpm}}</p>\\\n                <p class=\"viewer\">Selected instrument: {{inst_name[inst_id-1]}}</p>\\\n                <p class=\"viewer\">Bars: {{n_bars}}</p>\\\n                <button id=\"remove-btn\" @click=\"if(n_bars<4){n_bars++;addBar()}\"> + </button>\\\n                <button id=\"addKey-btn\" @click=\"if(n_bars>1){n_bars--}\"> - </button>\\\n            </div>\\\n            <controller-component\\\n                @newLayerEvent=\"addLayer\"\\\n                @bpmEvent=\"updateBPM\"\\\n                @playAllEvent=\"playAll\"\\\n                @stopAllEvent=\"stopAll\"\\\n                @instSelectionEvent=\"instSelected\"\\\n                @potEvent=\"potGlobalChange\"\\\n            ></controller-component>\\\n            <div id=\"layers-container\">\\\n                <layer-component v-for=\"(layer,index) in layers\"\\\n                    ref=\"layers_refs\"\\\n                    :key=\"layer.id\"\\\n                    :num_beats=\"layer.num_beats\"\\\n                    :total_duration=\"total_duration\"\\\n                    :inst_id=\"inst_id\"\\\n                    :n_bars=\"n_bars\"\\\n                    :pot=\"pot\"\\\n                    @remove=\"layers.splice(index,1)\"\\\n                    @addKeyEvent=\"if(!systemPlaying)layer.num_beats++\"\\\n                    @removeKeyEvent=\"if(!systemPlaying)layer.num_beats--\"\\\n                    @restartEvent=\"restart(index)\"\\\n                ></layer-component>\\\n            </div>\\\n        </div>\\\n    ',\n    \n    components: {\n        'layer-component' : layerComponent,\n        'controller-component' : controllerComponent,\n    },\n    \n    data(){\n        return {\n            systemPlaying: false,\n            bpm: 120,\n            nextId: 2,\n            inst_id: 1,\n            layers: [\n                {\n                    id: 0,\n                    num_beats: 3,\n                },\n                {\n                    id: 1,\n                    num_beats: 2,\n                },\n            ],\n            inst_id: 1,\n            inst_name: ['nome_strumento1','nome_strumento2','drum: TR-808'], /*mettere nomi degli strumenti*/\n            n_bars:1,\n            pot:true\n        }\n    },\n\n    computed: {\n        total_duration() {\n            if(this.layers[0]){\n                return this.layers[0].num_beats*60000/this.bpm;\n            }\n        }\n    },\n\n    methods: {\n        addLayer(num_beats_input) {\n            this.layers.push(\n                {   \n                    id: this.nextId,\n                    num_beats: num_beats_input\n                }\n            )\n            this.nextId += 1\n        },\n        updateBPM(bpm_input) {\n            this.bpm = bpm_input\n        },\n        /** l'uso di $ref non è dinamico, quindi se aggiungo layer quando sto suonando l'ultimo layer non parte */\n        playAll() {\n            this.systemPlaying = true\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].isPlaying = 0\n            }\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].play()\n            }\n        },\n        stopAll() {\n            this.systemPlaying = false\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].stop()\n            }\n        },\n        restart(index) {\n            if(index==0){\n                console.log(\"Restart\")\n                this.playAll();\n            }\n        },\n        instSelected(inst_id) {\n            this.inst_id=inst_id\n        },\n        addBar(){\n            for(idx in this.layers) {\n                this.$refs.layers_refs[idx].addLBar()\n            }\n        },\n        potGlobalChange(pot){\n            this.pot=pot\n        }\n    }\n}\n\nvar app = new Vue({\n    el:'#app',\n    components: {\n        'sequencer-component': sequencerComponent\n    }\n})\n\nvar synth1 = new Tone.PolySynth().toDestination();\nvar synth2 = new Tone.DuoSynth({\n    vibratoAmount  : 0.5 ,\n    vibratoRate  : 5 ,\n    harmonicity  : 1.5 ,\n    voice0  : {\n    volume  : -10 ,\n    portamento  : 0 ,\n    oscillator  : {\n    type  : \"sine\"\n    }  ,\n    filterEnvelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }  ,\n    envelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }\n    }  ,\n    voice1  : {\n    volume  : -10 ,\n    portamento  : 0 ,\n    oscillator  : {\n    type  : \"sine\"\n    }  ,\n    filterEnvelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }  ,\n    envelope  : {\n    attack  : 0.01 ,\n    decay  : 0 ,\n    sustain  : 1 ,\n    release  : 0.5\n    }\n    }\n    }).toDestination();\n\n/*--------Firestore config for drum-----------*/\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB23PkWGtyU3LFIYBy8uiKT0RM9gUYrkXk\",\n  authDomain: \"actam21.firebaseapp.com\",\n  projectId: \"actam21\",\n  storageBucket: \"actam21.appspot.com\",\n  messagingSenderId: \"745216869995\",\n  appId: \"1:745216869995:web:7ad950861a786b73b8d32e\",\n  measurementId: \"G-N1VC6LWMBM\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Get a reference to the storage service, which is used to create references in your storage bucket\nconst storage = getStorage(firebaseApp);\n\nvar drum = Array(8);\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_KICK_01_CLEAN_CFC.wav')).then(function(url) {\n        drum[0] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_SNARE_01_CLEAN_CFC.wav')).then(function(url) {\n        drum[1] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_TOM_HIGH_CLEAN_CFC.wav')).then(function(url) {\n        drum[2] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_TOM_MID_CLEAN_CFC.wav')).then(function(url) {\n        drum[3] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_H-CL_CLEAN_CFC.wav')).then(function(url) {\n        drum[4] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_H-OH_CLEAN_CFC.wav')).then(function(url) {\n        drum[5] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_CYM_01_CLEAN_CFC.wav')).then(function(url) {\n        drum[6] = new Tone.Player(url).toDestination();\n    })\n    getDownloadURL(ref(storage,'gs://actam21.appspot.com/808_COW_CLEAN_CFC.wav')).then(function(url) {\n        drum[7] = new Tone.Player(url).toDestination();\n    })\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.6.3\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.13\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.6.3\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    return typeof indexedDB === 'object';\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if (e.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","export * from '@firebase/storage';\n//# sourceMappingURL=index.esm.js.map\n","import { getApp, _getProvider, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nconst DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nconst CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nconst DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nconst DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nclass StorageError extends FirebaseError {\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    constructor(code, message) {\r\n        super(prependCode(code), `Firebase Storage: ${message} (${prependCode(code)})`);\r\n        /**\r\n         * Stores custom error data unque to StorageError.\r\n         */\r\n        this.customData = { serverResponse: null };\r\n        this._baseMessage = this.message;\r\n        // Without this, `instanceof StorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(this, StorageError.prototype);\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    _codeEquals(code) {\r\n        return prependCode(code) === this.code;\r\n    }\r\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\r\n    get serverResponse() {\r\n        return this.customData.serverResponse;\r\n    }\r\n    set serverResponse(serverResponse) {\r\n        this.customData.serverResponse = serverResponse;\r\n        if (this.customData.serverResponse) {\r\n            this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\r\n        }\r\n        else {\r\n            this.message = this._baseMessage;\r\n        }\r\n    }\r\n}\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    const message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new StorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new StorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new StorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    const message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new StorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new StorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new StorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new StorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new StorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new StorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new StorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new StorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new StorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new StorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new StorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction invalidArgument(message) {\r\n    return new StorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new StorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new StorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new StorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new StorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nclass Location {\r\n    constructor(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    get path() {\r\n        return this.path_;\r\n    }\r\n    get isRoot() {\r\n        return this.path.length === 0;\r\n    }\r\n    fullServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    }\r\n    bucketOnlyServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    }\r\n    static makeFromBucketSpec(bucketString, host) {\r\n        let bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    }\r\n    static makeFromUrl(url, host) {\r\n        let location = null;\r\n        const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        const gsPath = '(/(.*))?$';\r\n        const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        const gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        const version = 'v[A-Za-z0-9_]+';\r\n        const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        const firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        const firebaseStorageRegExp = new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`, 'i');\r\n        const firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        const cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        const cloudStoragePath = '([^?#]*)';\r\n        const cloudStorageRegExp = new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`, 'i');\r\n        const cloudStorageIndices = { bucket: 1, path: 2 };\r\n        const groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const group = groups[i];\r\n            const captures = group.regex.exec(url);\r\n            if (captures) {\r\n                const bucketValue = captures[group.indices.bucket];\r\n                let pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    }\r\n}\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nclass FailRequest {\r\n    constructor(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(_appDelete = false) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    let waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let retryTimeoutId = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let globalTimeoutId = null;\r\n    let hitTimeout = false;\r\n    let cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    let triggeredCallback = false;\r\n    function triggerCallback(...args) {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        retryTimeoutId = setTimeout(() => {\r\n            retryTimeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function clearGlobalTimeout() {\r\n        if (globalTimeoutId) {\r\n            clearTimeout(globalTimeoutId);\r\n        }\r\n    }\r\n    function handler(success, ...args) {\r\n        if (triggeredCallback) {\r\n            clearGlobalTimeout();\r\n            return;\r\n        }\r\n        if (success) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        const mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        let waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    let stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        clearGlobalTimeout();\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (retryTimeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(retryTimeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    globalTimeoutId = setTimeout(() => {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host, protocol) {\r\n    let origin = host;\r\n    if (protocol == null) {\r\n        origin = `https://${host}`;\r\n    }\r\n    return `${protocol}://${origin}/v0${urlPart}`;\r\n}\r\nfunction makeQueryString(params) {\r\n    const encode = encodeURIComponent;\r\n    let queryPart = '?';\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            const nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\r\nclass NetworkRequest {\r\n    constructor(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_) {\r\n        this.url_ = url_;\r\n        this.method_ = method_;\r\n        this.headers_ = headers_;\r\n        this.body_ = body_;\r\n        this.successCodes_ = successCodes_;\r\n        this.additionalRetryCodes_ = additionalRetryCodes_;\r\n        this.callback_ = callback_;\r\n        this.errorCallback_ = errorCallback_;\r\n        this.timeout_ = timeout_;\r\n        this.progressCallback_ = progressCallback_;\r\n        this.connectionFactory_ = connectionFactory_;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.promise_ = new Promise((resolve, reject) => {\r\n            this.resolve_ = resolve;\r\n            this.reject_ = reject;\r\n            this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    start_() {\r\n        const doTheRequest = (backoffCallback, canceled) => {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            const connection = this.connectionFactory_();\r\n            this.pendingConnection_ = connection;\r\n            const progressListener = progressEvent => {\r\n                const loaded = progressEvent.loaded;\r\n                const total = progressEvent.lengthComputable\r\n                    ? progressEvent.total\r\n                    : -1;\r\n                if (this.progressCallback_ !== null) {\r\n                    this.progressCallback_(loaded, total);\r\n                }\r\n            };\r\n            if (this.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(this.url_, this.method_, this.body_, this.headers_)\r\n                .then(() => {\r\n                if (this.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                this.pendingConnection_ = null;\r\n                const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                const status = connection.getStatus();\r\n                if (!hitServer || this.isRetryStatusCode_(status)) {\r\n                    const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                const successCode = this.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        };\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        const backoffDone = (requestWentThrough, status) => {\r\n            const resolve = this.resolve_;\r\n            const reject = this.reject_;\r\n            const connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    const result = this.callback_(connection, connection.getResponse());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    const err = unknown();\r\n                    err.serverResponse = connection.getErrorText();\r\n                    if (this.errorCallback_) {\r\n                        reject(this.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        const err = this.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        const err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    }\r\n    isRetryStatusCode_(status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        const isFiveHundredCode = status >= 500 && status < 600;\r\n        const extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        const isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    }\r\n}\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nclass RequestEndStatus {\r\n    constructor(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n}\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion) {\r\n    const queryPart = makeQueryString(requestInfo.urlParams);\r\n    const url = requestInfo.url + queryPart;\r\n    const headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob$1(...args) {\r\n    const BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        const bb = new BlobBuilder();\r\n        for (let i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new StorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nconst StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nclass StringData {\r\n    constructor(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    const b = [];\r\n    for (let i = 0; i < value.length; i++) {\r\n        let c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    const valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        const hi = c;\r\n                        const lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    let decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            const hasMinus = value.indexOf('-') !== -1;\r\n            const hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                const invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            const hasPlus = value.indexOf('+') !== -1;\r\n            const hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                const invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    let bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    const array = new Uint8Array(bytes.length);\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nclass DataURLParts {\r\n    constructor(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        const matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        const middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n}\r\nfunction dataURLBytes_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    const longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nclass FbsBlob {\r\n    constructor(data, elideCopy) {\r\n        let size = 0;\r\n        let blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    size() {\r\n        return this.size_;\r\n    }\r\n    type() {\r\n        return this.type_;\r\n    }\r\n    slice(startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            const realBlob = this.data_;\r\n            const sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            const slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    }\r\n    static getBlob(...args) {\r\n        if (isNativeBlobDefined()) {\r\n            const blobby = args.map((val) => {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob$1.apply(null, blobby));\r\n        }\r\n        else {\r\n            const uint8Arrays = args.map((val) => {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            let finalLength = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                finalLength += array.byteLength;\r\n            });\r\n            const merged = new Uint8Array(finalLength);\r\n            let index = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    merged[index++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged, true);\r\n        }\r\n    }\r\n    uploadData() {\r\n        return this.data_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    let obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    const index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    const newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    const canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(component => component.length > 0)\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    const index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nclass Mapping {\r\n    constructor(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n}\r\nlet mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    const mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    const nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    const sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    const metadata = {};\r\n    metadata['type'] = 'file';\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    const tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    const encode = encodeURIComponent;\r\n    const tokensList = tokens.split(',');\r\n    const urls = tokensList.map((token) => {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        const base = makeUrl(urlPart, host, protocol);\r\n        const queryString = makeQueryString({\r\n            alt: 'media',\r\n            token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    const resource = {};\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PREFIXES_KEY = 'prefixes';\r\nconst ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    const listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (const path of resource[PREFIXES_KEY]) {\r\n            const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            const reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (const item of resource[ITEMS_KEY]) {\r\n            const reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\r\nclass RequestInfo {\r\n    constructor(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        const listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        let newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getErrorText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    const shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        let newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    const urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, (_, data) => data, timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    if (maxDownloadSizeBytes !== undefined) {\r\n        requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\r\n        requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\r\n    }\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'PATCH';\r\n    const body = toResourceString(metadata, mappings);\r\n    const headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'DELETE';\r\n    const timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    const metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        let str = '';\r\n        for (let i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    const boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    const metadata_ = metadataForUpload_(location, blob, metadata);\r\n    const metadataString = toResourceString(metadata_, mappings);\r\n    const preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    const postBlobPart = '\\r\\n--' + boundary + '--';\r\n    const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    const urlParams = { name: metadata_['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nclass ResumableUploadStatus {\r\n    constructor(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n}\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    let status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    const allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    const urlParams = { name: metadataForUpload['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    const body = toResourceString(metadataForUpload, mappings);\r\n    const timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        let url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    const headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        const status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        let sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        const size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nconst RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    const status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    const bytesLeft = status_.total - status_.current;\r\n    let bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    const startByte = status_.current;\r\n    const endByte = startByte + bytesToUpload;\r\n    const uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    const headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': `${status_.current}`\r\n    };\r\n    const body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        const newCurrent = status_.current + bytesToUpload;\r\n        const size = blob.size();\r\n        let metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\r\nconst TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n// type keys = keyof TaskState\r\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\r\nconst TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Observer {\r\n    constructor(nextOrObserver, error, complete) {\r\n        const asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error !== null && error !== void 0 ? error : undefined;\r\n            this.complete = complete !== null && complete !== void 0 ? complete : undefined;\r\n        }\r\n        else {\r\n            const observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return (...argsToForward) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(() => f(...argsToForward));\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** An override for the text-based Connection. Used in tests. */\r\nlet textFactoryOverride = null;\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nclass XhrConnection {\r\n    constructor() {\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.initXhr();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(resolve => {\r\n            this.xhr_.addEventListener('abort', () => {\r\n                this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('error', () => {\r\n                this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('load', () => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    send(url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (const key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    }\r\n    getErrorCode() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    }\r\n    getStatus() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    }\r\n    getResponse() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponse() before sending');\r\n        }\r\n        return this.xhr_.response;\r\n    }\r\n    getErrorText() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorText() before sending');\r\n        }\r\n        return this.xhr_.statusText;\r\n    }\r\n    /** Aborts the request. */\r\n    abort() {\r\n        this.xhr_.abort();\r\n    }\r\n    getResponseHeader(header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    }\r\n    addUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    }\r\n    removeUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    }\r\n}\r\nclass XhrTextConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'text';\r\n    }\r\n}\r\nfunction newTextConnection() {\r\n    return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\r\n}\r\nclass XhrBytesConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'arraybuffer';\r\n    }\r\n}\r\nfunction newBytesConnection() {\r\n    return new XhrBytesConnection();\r\n}\r\nclass XhrBlobConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'blob';\r\n    }\r\n}\r\nfunction newBlobConnection() {\r\n    return new XhrBlobConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nclass UploadTask {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    constructor(ref, blob, metadata = null) {\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = error => {\r\n            this._request = undefined;\r\n            this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                this._needToFetchStatus = true;\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = error => {\r\n            this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n            this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, () => { });\r\n    }\r\n    _makeProgressCallback() {\r\n        const sizeBefore = this._transferred;\r\n        return loaded => this._updateProgress(sizeBefore + loaded);\r\n    }\r\n    _shouldDoResumable(blob) {\r\n        return blob.size() > 256 * 1024;\r\n    }\r\n    _start() {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    }\r\n    _resolveToken(callback) {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            switch (this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    // TODO(andysoto): assert false\r\n    _createResumable() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = createResumableUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const createRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = createRequest;\r\n            createRequest.getPromise().then((url) => {\r\n                this._request = undefined;\r\n                this._uploadUrl = url;\r\n                this._needToFetchStatus = false;\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _fetchStatus() {\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getResumableUploadStatus(this._ref.storage, this._ref._location, url, this._blob);\r\n            const statusRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = statusRequest;\r\n            statusRequest.getPromise().then(status => {\r\n                status = status;\r\n                this._request = undefined;\r\n                this._updateProgress(status.current);\r\n                this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    this._needToFetchMetadata = true;\r\n                }\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _continueUpload() {\r\n        const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        const status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            let requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(this._ref._location, this._ref.storage, url, this._blob, chunkSize, this._mappings, status, this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                this._error = e;\r\n                this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            const uploadRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = uploadRequest;\r\n            uploadRequest.getPromise().then((newStatus) => {\r\n                this._increaseMultiplier();\r\n                this._request = undefined;\r\n                this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    this._metadata = newStatus.metadata;\r\n                    this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    this.completeTransitions_();\r\n                }\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _increaseMultiplier() {\r\n        const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    }\r\n    _fetchMetadata() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getMetadata$2(this._ref.storage, this._ref._location, this._mappings);\r\n            const metadataRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._transition(\"success\" /* SUCCESS */);\r\n            }, this._metadataErrorHandler);\r\n        });\r\n    }\r\n    _oneShotUpload() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = multipartUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const multipartRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._updateProgress(this._blob.size());\r\n                this._transition(\"success\" /* SUCCESS */);\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _updateProgress(transferred) {\r\n        const old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    }\r\n    _transition(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                const wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    }\r\n    completeTransitions_() {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * A snapshot of the current task state.\r\n     */\r\n    get snapshot() {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        return {\r\n            bytesTransferred: this._transferred,\r\n            totalBytes: this._blob.size(),\r\n            state: externalState,\r\n            metadata: this._metadata,\r\n            task: this,\r\n            ref: this._ref\r\n        };\r\n    }\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    on(type, nextOrObserver, error, completed) {\r\n        const observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\r\n        this._addObserver(observer);\r\n        return () => {\r\n            this._removeObserver(observer);\r\n        };\r\n    }\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    then(onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    }\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    catch(onRejected) {\r\n        return this.then(null, onRejected);\r\n    }\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    _addObserver(observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    }\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    _removeObserver(observer) {\r\n        const i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    }\r\n    _notifyObservers() {\r\n        this._finishPromise();\r\n        const observers = this._observers.slice();\r\n        observers.forEach(observer => {\r\n            this._notifyObserver(observer);\r\n        });\r\n    }\r\n    _finishPromise() {\r\n        if (this._resolve !== undefined) {\r\n            let triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    const toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    }\r\n    _notifyObserver(observer) {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    resume() {\r\n        const valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    pause() {\r\n        const valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    cancel() {\r\n        const valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nclass Reference {\r\n    constructor(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    toString() {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    }\r\n    _newRef(service, location) {\r\n        return new Reference(service, location);\r\n    }\r\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\r\n    get root() {\r\n        const location = new Location(this._location.bucket, '');\r\n        return this._newRef(this._service, location);\r\n    }\r\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\r\n    get bucket() {\r\n        return this._location.bucket;\r\n    }\r\n    /**\r\n     * The full path of this object.\r\n     */\r\n    get fullPath() {\r\n        return this._location.path;\r\n    }\r\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\r\n    get name() {\r\n        return lastComponent(this._location.path);\r\n    }\r\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\r\n    get storage() {\r\n        return this._service;\r\n    }\r\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\r\n    get parent() {\r\n        const newPath = parent(this._location.path);\r\n        if (newPath === null) {\r\n            return null;\r\n        }\r\n        const location = new Location(this._location.bucket, newPath);\r\n        return new Reference(this._service, location);\r\n    }\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    _throwIfRoot(name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\r\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBytes');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBytesConnection)\r\n        .then(bytes => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            bytes.slice(0, maxDownloadSizeBytes)\r\n        : bytes);\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\r\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBlob');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBlobConnection)\r\n        .then(blob => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            blob.slice(0, maxDownloadSizeBytes)\r\n        : blob);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytes');\r\n    const requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(finalMetadata => {\r\n        return {\r\n            metadata: finalMetadata,\r\n            ref\r\n        };\r\n    });\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString$1(ref, value, format = StringFormat.RAW, metadata) {\r\n    ref._throwIfRoot('uploadString');\r\n    const data = dataFromString(format, value);\r\n    const metadataClone = Object.assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return uploadBytes$1(ref, data.data, metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    const accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(() => accumulator);\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nasync function listAllHelper(ref, accumulator, pageToken) {\r\n    const opt = {\r\n        // maxResults is 1000 by default.\r\n        pageToken\r\n    };\r\n    const nextPage = await list$1(ref, opt);\r\n    accumulator.prefixes.push(...nextPage.prefixes);\r\n    accumulator.items.push(...nextPage.items);\r\n    if (nextPage.nextPageToken != null) {\r\n        await listAllHelper(ref, accumulator, nextPage.nextPageToken);\r\n    }\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    if (options != null) {\r\n        if (typeof options.maxResults === 'number') {\r\n            validateNumber('options.maxResults', \r\n            /* minValue= */ 1, \r\n            /* maxValue= */ 1000, options.maxResults);\r\n        }\r\n    }\r\n    const op = options || {};\r\n    const requestInfo = list$2(ref.storage, ref._location, \r\n    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    ref._throwIfRoot('getMetadata');\r\n    const requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    ref._throwIfRoot('updateMetadata');\r\n    const requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    ref._throwIfRoot('getDownloadURL');\r\n    const requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(url => {\r\n        if (url === null) {\r\n            throw noDownloadURL();\r\n        }\r\n        return url;\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    ref._throwIfRoot('deleteObject');\r\n    const requestInfo = deleteObject$2(ref.storage, ref._location);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    const newPath = child(ref._location.path, childPath);\r\n    const location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        const service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        const reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    const bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options = {}) {\r\n    storage.host = `${host}:${port}`;\r\n    storage._protocol = 'http';\r\n    const { mockUserToken } = options;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\r\nclass FirebaseStorageImpl {\r\n    constructor(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._protocol = 'https';\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The host string for this service, in the form of `host` or\r\n     * `host:port`.\r\n     */\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(host) {\r\n        this._host = host;\r\n        if (this._url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\r\n    get maxUploadRetryTime() {\r\n        return this._maxUploadRetryTime;\r\n    }\r\n    set maxUploadRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxUploadRetryTime = time;\r\n    }\r\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\r\n    get maxOperationRetryTime() {\r\n        return this._maxOperationRetryTime;\r\n    }\r\n    set maxOperationRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxOperationRetryTime = time;\r\n    }\r\n    async _getAuthToken() {\r\n        if (this._overrideAuthToken) {\r\n            return this._overrideAuthToken;\r\n        }\r\n        const auth = this._authProvider.getImmediate({ optional: true });\r\n        if (auth) {\r\n            const tokenData = await auth.getToken();\r\n            if (tokenData !== null) {\r\n                return tokenData.accessToken;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async _getAppCheckToken() {\r\n        const appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n        if (appCheck) {\r\n            const result = await appCheck.getToken();\r\n            // TODO: What do we want to do if there is an error getting the token?\r\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n            // the token (actual or dummy) to send requests.\r\n            return result.token;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    _delete() {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(request => request.cancel());\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    _makeStorageReference(loc) {\r\n        return new Reference(this, loc);\r\n    }\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    _makeRequest(requestInfo, requestFactory, authToken, appCheckToken) {\r\n        if (!this._deleted) {\r\n            const request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion);\r\n            this._requests.add(request);\r\n            // Request removes itself from set when complete.\r\n            request.getPromise().then(() => this._requests.delete(request), () => this._requests.delete(request));\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    }\r\n    async makeRequestWithTokens(requestInfo, requestFactory) {\r\n        const [authToken, appCheckToken] = await Promise.all([\r\n            this._getAuthToken(),\r\n            this._getAppCheckToken()\r\n        ]);\r\n        return this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise();\r\n    }\r\n}\n\nconst name = \"@firebase/storage\";\nconst version = \"0.9.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nconst STORAGE_TYPE = 'storage';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\r\nfunction getBytes(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBytesInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytes$1(ref, data, metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadString$1(ref, value, format, metadata);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\r\nfunction getStorage(app = getApp(), bucketUrl) {\r\n    app = getModularInstance(app);\r\n    const storageProvider = _getProvider(app, STORAGE_TYPE);\r\n    const storageInstance = storageProvider.getImmediate({\r\n        identifier: bucketUrl\r\n    });\r\n    return storageInstance;\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options = {}) {\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\r\nfunction getBlob(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBlobInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\r\nfunction getStream(ref, maxDownloadSizeBytes) {\r\n    throw new Error('getStream() is only supported by NodeJS builds');\r\n}\n\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction factory(container, { instanceIdentifier: url }) {\r\n    const app = container.getProvider('app').getImmediate();\r\n    const authProvider = container.getProvider('auth-internal');\r\n    const appCheckProvider = container.getProvider('app-check-internal');\r\n    return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, SDK_VERSION);\r\n}\r\nfunction registerStorage() {\r\n    _registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\r\n    registerVersion(name, version, '');\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\r\nregisterStorage();\n\nexport { StringFormat, FbsBlob as _FbsBlob, Location as _Location, TaskEvent as _TaskEvent, TaskState as _TaskState, UploadTask as _UploadTask, dataFromString as _dataFromString, _getChild, invalidArgument as _invalidArgument, invalidRootOperation as _invalidRootOperation, connectStorageEmulator, deleteObject, getBlob, getBytes, getDownloadURL, getMetadata, getStorage, getStream, list, listAll, ref, updateMetadata, uploadBytes, uploadBytesResumable, uploadString };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let retryTimeoutId: any = null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let globalTimeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    retryTimeoutId = setTimeout(() => {\n      retryTimeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout(): void {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    clearGlobalTimeout();\n    if (triggeredCallback) {\n      return;\n    }\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/** Response type exposed by the networking APIs. */\nexport type ConnectionType =\n  | string\n  | ArrayBuffer\n  | Blob\n  | NodeJS.ReadableStream;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n *\n * You can create a new connection by invoking `newTextConnection()`,\n * `newBytesConnection()` or `newStreamConnection()`.\n */\nexport interface Connection<T extends ConnectionType> {\n  /**\n   * Sends a request to the provided URL.\n   *\n   * This method never rejects its promise. In case of encountering an error,\n   * it sets an error code internally which can be accessed by calling\n   * getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponse(): T;\n\n  getErrorText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { id as backoffId, start, stop } from './backoff';\nimport { appDeleted, canceled, retryLimitExceeded, unknown } from './error';\nimport { ErrorHandler, RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Connection, ErrorCode, Headers, ConnectionType } from './connection';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\n/**\n * Handles network logic for all Storage Requests, including error reporting and\n * retries with backoff.\n *\n * @param I - the type of the backend's network response.\n * @param - O the output type used by the rest of the SDK. The conversion\n * happens in the specified `callback_`.\n */\nclass NetworkRequest<I extends ConnectionType, O> implements Request<O> {\n  private pendingConnection_: Connection<I> | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: O | PromiseLike<O>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  private promise_: Promise<O>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<I, O>,\n    private errorCallback_: ErrorHandler | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection<I>\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: O | PromiseLike<O>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (progressEvent: ProgressEvent) => void =\n        progressEvent => {\n          const loaded = progressEvent.loaded;\n          const total = progressEvent.lengthComputable\n            ? progressEvent.total\n            : -1;\n          if (this.progressCallback_ !== null) {\n            this.progressCallback_(loaded, total);\n          }\n        };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (!hitServer || this.isRetryStatusCode_(status)) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus<I>\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection<I>;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(connection, connection.getResponse());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getErrorText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<O> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus<I extends ConnectionType> {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection<I> | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<I extends ConnectionType, O>(\n  requestInfo: RequestInfo<I, O>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection<I>,\n  firebaseVersion?: string\n): Request<O> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<I, O>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the listOptions and listResult format\n */\nimport { Location } from './location';\nimport { jsonObjectOrNull } from './json';\nimport { ListResult } from '../list';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Represents the simplified object metadata returned by List API.\n * Other fields are filtered because list in Firebase Rules does not grant\n * the permission to read the metadata.\n */\ninterface ListMetadataResponse {\n  name: string;\n  bucket: string;\n}\n\n/**\n * Represents the JSON response of List API.\n */\ninterface ListResultResponse {\n  prefixes: string[];\n  items: ListMetadataResponse[];\n  nextPageToken?: string;\n}\n\nconst PREFIXES_KEY = 'prefixes';\nconst ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resource: ListResultResponse\n): ListResult {\n  const listResult: ListResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (const path of resource[PREFIXES_KEY]) {\n      const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      const reference = service._makeStorageReference(\n        new Location(bucket, pathWithoutTrailingSlash)\n      );\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (const item of resource[ITEMS_KEY]) {\n      const reference = service._makeStorageReference(\n        new Location(bucket, item['name'])\n      );\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\n\nexport function fromResponseString(\n  service: FirebaseStorageImpl,\n  bucket: string,\n  resourceString: string\n): ListResult | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as unknown as ListResultResponse;\n  return fromBackendResponse(service, bucket, resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection, ConnectionType } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I extends ConnectionType, O> = (\n  connection: Connection<I>,\n  response: I\n) => O;\n\n/** A function to handle an error. */\nexport type ErrorHandler = (\n  connection: Connection<ConnectionType>,\n  response: StorageError\n) => StorageError;\n\n/**\n * Contains a fully specified request.\n *\n * @param I - the type of the backend's network response.\n * @param O - the output response type used by the rest of the SDK.\n */\nexport class RequestInfo<I extends ConnectionType, O> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: ErrorHandler | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<I, O>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection, ConnectionType } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => Metadata {\n  function handler(xhr: Connection<string>, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection<string>, p2: string) => ListResult {\n  function handler(xhr: Connection<string>, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection<string>, p2: string) => string | null {\n  function handler(xhr: Connection<string>, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getErrorText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection<ConnectionType>, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(\n    xhr: Connection<ConnectionType>,\n    err: StorageError\n  ): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<string, ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getBytes<I extends ConnectionType>(\n  service: FirebaseStorageImpl,\n  location: Location,\n  maxDownloadSizeBytes?: number\n): RequestInfo<I, I> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    (_: Connection<I>, data: I) => data,\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\n    requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\n  }\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string, string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<string, Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<string, void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection<string>, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection<string>,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string, string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection<string>): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<string, ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection<string>): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<string, ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(\n    xhr: Connection<string>,\n    text: string\n  ): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Connection,\n  ConnectionType,\n  ErrorCode,\n  Headers\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet textFactoryOverride: (() => Connection<string>) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nabstract class XhrConnection<T extends ConnectionType>\n  implements Connection<T>\n{\n  protected xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  protected sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  abstract initXhr(): void;\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponse(): T {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponse() before sending');\n    }\n    return this.xhr_.response;\n  }\n\n  getErrorText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorText() before sending');\n    }\n    return this.xhr_.statusText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport class XhrTextConnection extends XhrConnection<string> {\n  initXhr(): void {\n    this.xhr_.responseType = 'text';\n  }\n}\n\nexport function newTextConnection(): Connection<string> {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nexport class XhrBytesConnection extends XhrConnection<ArrayBuffer> {\n  private data_?: ArrayBuffer;\n\n  initXhr(): void {\n    this.xhr_.responseType = 'arraybuffer';\n  }\n}\n\nexport function newBytesConnection(): Connection<ArrayBuffer> {\n  return new XhrBytesConnection();\n}\n\nexport class XhrBlobConnection extends XhrConnection<Blob> {\n  initXhr(): void {\n    this.xhr_.responseType = 'blob';\n  }\n}\n\nexport function newBlobConnection(): Connection<Blob> {\n  return new XhrBlobConnection();\n}\n\nexport function newStreamConnection(): Connection<NodeJS.ReadableStream> {\n  throw new Error('Streams are only supported on Node');\n}\n\nexport function injectTestConnection(\n  factory: (() => Connection<string>) | null\n): void {\n  textFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newTextConnection } from './platform/connection';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newTextConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: Unsubscribe | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { PassThrough, Transform, TransformOptions } from 'stream';\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, lastComponent, parent } from './implementation/path';\nimport {\n  deleteObject as requestsDeleteObject,\n  getBytes,\n  getDownloadUrl as requestsGetDownloadUrl,\n  getMetadata as requestsGetMetadata,\n  list as requestsList,\n  multipartUpload,\n  updateMetadata as requestsUpdateMetadata\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { dataFromString, StringFormat } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport {\n  newBlobConnection,\n  newBytesConnection,\n  newStreamConnection,\n  newTextConnection\n} from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded bytes.\n */\nexport function getBytesInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref._throwIfRoot('getBytes');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBytesConnection)\n    .then(bytes =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (bytes as ArrayBuffer).slice(0, maxDownloadSizeBytes)\n        : (bytes as ArrayBuffer)\n    );\n}\n\n/**\n * Download the bytes at the object's location.\n * @returns A Promise containing the downloaded blob.\n */\nexport function getBlobInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref._throwIfRoot('getBlob');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newBlobConnection)\n    .then(blob =>\n      maxDownloadSizeBytes !== undefined\n        ? // GCS may not honor the Range header for small files\n          (blob as Blob).slice(0, maxDownloadSizeBytes)\n        : (blob as Blob)\n    );\n}\n\n/** Stream the bytes at the object's location. */\nexport function getStreamInternal(\n  ref: Reference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  ref._throwIfRoot('getStream');\n  const requestInfo = getBytes(\n    ref.storage,\n    ref._location,\n    maxDownloadSizeBytes\n  );\n\n  /** A transformer that passes through the first n bytes. */\n  const newMaxSizeTransform: (n: number) => TransformOptions = n => {\n    let missingBytes = n;\n    return {\n      transform(chunk, encoding, callback) {\n        // GCS may not honor the Range header for small files\n        if (chunk.length < missingBytes) {\n          this.push(chunk);\n          missingBytes -= chunk.length;\n        } else {\n          this.push(chunk.slice(0, missingBytes));\n          this.emit('end');\n        }\n        callback();\n      }\n    } as TransformOptions;\n  };\n\n  const result =\n    maxDownloadSizeBytes !== undefined\n      ? new Transform(newMaxSizeTransform(maxDownloadSizeBytes))\n      : new PassThrough();\n\n  ref.storage\n    .makeRequestWithTokens(requestInfo, newStreamConnection)\n    .then(stream => (stream as NodeJS.ReadableStream).pipe(result))\n    .catch(e => result.destroy(e));\n  return result;\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newTextConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection, ConnectionType } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>,\n    authToken: string | null,\n    appCheckToken: string | null\n  ): Request<O> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<I extends ConnectionType, O>(\n    requestInfo: RequestInfo<I, O>,\n    requestFactory: () => Connection<I>\n  ): Promise<O> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal,\n  getBytesInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport { EmulatorMockTokenOptions, getModularInstance } from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise containing the object's bytes\n */\nexport function getBytes(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<ArrayBuffer> {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageReference } from './public-types';\nimport { Reference, getBlobInternal } from './reference';\nimport { getModularInstance } from '@firebase/util';\n\n/**\n * Downloads the data at the object's location. Returns an error if the object\n * is not found.\n *\n * To use this functionality, you have to whitelist your app's origin in your\n * Cloud Storage bucket. See also\n * https://cloud.google.com/storage/docs/configuring-cors\n *\n * This API is not available in Node.\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A Promise that resolves with a Blob containing the object's bytes\n */\nexport function getBlob(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): Promise<Blob> {\n  ref = getModularInstance(ref);\n  return getBlobInternal(ref as Reference, maxDownloadSizeBytes);\n}\n\n/**\n * Downloads the data at the object's location. Raises an error event if the\n * object is not found.\n *\n * This API is only available in Node.\n *\n * @public\n * @param ref - StorageReference where data should be downloaded.\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\n * retrieve.\n * @returns A stream with the object's data as bytes\n */\nexport function getStream(\n  ref: StorageReference,\n  maxDownloadSizeBytes?: number\n): NodeJS.ReadableStream {\n  throw new Error('getStream() is only supported by NodeJS builds');\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n"],"names":["appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","setLogLevelImpl","name","version","stringToByteArray","getBlob","getMetadata","list","getBytes","updateMetadata","deleteObject","fbsAsync","uploadBytes","uploadBytesResumable","uploadString","listAll","requestsList","requestsGetMetadata","requestsUpdateMetadata","getDownloadURL","requestsGetDownloadUrl","requestsDeleteObject","_getChild","ref","connectStorageEmulator","uploadBytesInternal","uploadStringInternal","uploadBytesResumableInternal","getMetadataInternal","updateMetadataInternal","listInternal","listAllInternal","getDownloadURLInternal","deleteObjectInternal","refInternal","_getChildInternal","connectEmulatorInternal"],"version":3,"file":"index.c05ff127.js.map","sourceRoot":"/__parcel_source_root/"}